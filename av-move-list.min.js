"use strict";var app=angular.module("autovance.av-move-list",[]);app.directive("avMoveList",function($q){return{restrict:"EA",require:"ngModel",scope:{selectedLabel:"@",availableLabel:"@",displayAttr:"@",idAttr:"@",available:"=",model:"=ngModel"},template:'<div class="multiSelect"><div class="select"><label class="control-label" for="multiSelectSelected">{{ selectedLabel }} ({{ model.length }})</label><select id="currentRoles" ng-model="selected.current" multiple class="pull-left" ng-options="e as e[displayAttr] for e in model"></select></div><div class="select buttons"><button class="btn mover left" ng-click="add()" title="Add selected" ng-disabled="selected.available.length == 0"><i class="icon-arrow-left"></i></button><button class="btn mover right" ng-click="remove()" title="Remove selected" ng-disabled="selected.current.length == 0"><i class="icon-arrow-right"></i></button></div><div class="select"><label class="control-label" for="multiSelectAvailable">{{ availableLabel }} ({{ available.length }})</label><select id="multiSelectAvailable" ng-model="selected.available" multiple ng-options="e as e[displayAttr] for e in available"></select></div></div>',link:function(scope,elm,attrs){scope.selected={available:[],current:[]};var dataLoading=function(scopeAttr){var loading=$q.defer();return scope[scopeAttr]?loading.resolve(scope[scopeAttr]):scope.$watch(scopeAttr,function(newValue,oldValue){void 0!==newValue&&loading.resolve(newValue)}),loading.promise},filterOut=function(original,toFilter){var filtered=[];return angular.forEach(original,function(entity){for(var match=!1,i=0;i<toFilter.length;i++)if(toFilter[i][attrs.displayAttr]==entity[attrs.displayAttr]){match=!0;break}match||filtered.push(entity)}),filtered};scope.refreshAvailable=function(){scope.available=filterOut(scope.available,scope.model),scope.selected.available=[],scope.selected.current=[]},scope.add=function(){scope.model=scope.model.concat(scope.selected.available),scope.refreshAvailable()},scope.remove=function(){scope.available=scope.available.concat(scope.selected.current),scope.model=filterOut(scope.model,scope.selected.current),scope.refreshAvailable()},$q.all([dataLoading("model"),dataLoading("available")]).then(function(results){scope.refreshAvailable()})}}});